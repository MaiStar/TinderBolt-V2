from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler

from gpt import *
from util import *

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–∞


class Dialog:
    def __init__(self):
        self.mode = "main"
        self.list = []


dialog = Dialog()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ChatGPT
chatgpt = ChatGptService(token="javcgk8pFZZssAv/GAaLFtpU2XRxcYwvevXZIyGFAmFZI3L06qepS/RV1vwI5WWJCzXUXxhEgBL78gsqw097AFLgJhfSJIYTGLJXuNmmC1WHnD5rLqK5bovPAMquTedVct0tMO3YKL7WnwWVBYot49YP/DsQPPKt8po+UHHV7OmqYXjjYWW2CcTundXGhGuyvJm5sNKlWWp5DZqBhLIWahLjBMGuOH0m3XMutHaIG8dtbZZqI=")


async def hello(update, context):
    if dialog.mode == "gpt":
        await gpt_dialog(update, context)
    elif dialog.mode == "date":
        await date_dialog(update, context)
    elif dialog.mode == "message":
        await message_dialog(update, context)
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
        await send_text(update, context, "–ü—Ä–∏–≤–µ—Ç!")
        await send_text_buttons(update, context, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã", {  # –¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π
            "btn_start": " –°—Ç–∞—Ä—Ç ",  # –¢–µ–∫—Å—Ç –∏ –∫–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
            "btn_stop": " –°—Ç–æ–ø "  # –¢–µ–∫—Å—Ç –∏ –∫–æ–º–∞–Ω–¥–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–æ–ø"
        })
        await show_main_menu(update, context, {
            "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
            "profile": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé",
            "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
            "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
            "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
            "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üß†"
        })


async def start(update, context):
    dialog.mode = "main"
    text = load_message("main")
    await send_photo(update, context, "main")
    await send_text(update, context, text)
    await show_main_menu(update, context, {
        "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
        "profile": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé",
        "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üß†"
    })


async def gpt(update, context):
    dialog.mode = "gpt"
    await send_photo(update, context, "gpt")
    await send_text(update, context, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ *ChatGPT*:")
    await show_main_menu(update, context, {
        "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
        "profile": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé",
        "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üß†"
    })


async def gpt_dialog(update, context):
    my_message = await send_text(update, context, "ChatGPT –¥—É–º–∞–µ—Ç. –û–∂–∏–¥–∞–π—Ç–µ...")
    prompt = load_prompt("gpt")
    text = update.message.text
    answer = await chatgpt.send_question(prompt, text)
    await my_message.edit_text(answer)


async def date(update, context):
    dialog.mode = "date"
    await send_photo(update, context, "date")
    text = load_message("date")
    await send_text_buttons(update, context, text, {
        "date_monro": " –ú–µ—Ä–∏–ª–∏–Ω –ú–æ–Ω—Ä–æ",
        "date_obama": "–ú–∏—à–µ–ª—å –û–±–∞–º–∞",
        "date_kennedy": "–ñ–∞–∫–ª–∏–Ω –ö–µ–Ω–Ω–µ–¥–∏"
    })
    await show_main_menu(update, context, {
        "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
        "profile": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé",
        "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üß†"
    })


async def date_dialog(update, context):
    text = update.message.text
    my_message = await send_text(update, context, "–î–µ–≤—É—à–∫–∞ –Ω–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç...")
    answer = await chatgpt.add_message(text)
    await my_message.edit_text(answer)


async def date_button(update, context):
    query = update.callback_query
    data = query.data
    await query.answer()
    await send_photo(update, context, data)
    await send_text(update, context, " –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! ")
    prompt = load_prompt(data)
    chatgpt.set_prompt(prompt)


async def message(update, context):
    dialog.mode = "message"
    await send_photo(update, context, "message")
    text = load_message("message")
    await send_text_buttons(update, context, text, {
        "message_next": "–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
        "message_date": "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ",
    })
    dialog.list.clear()
    await show_main_menu(update, context, {
        "start": "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞",
        "profile": "–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–∏–ª—è üòé",
        "opener": "—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞",
        "message": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà",
        "date": "–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•",
        "gpt": "–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ChatGPT üß†"
    })


async def message_dialog(update, context):
    text = update.message.text
    dialog.list.append(text)


async def message_button(update, context):
    query = update.callback_query
    data = query.data
    await query.answer()
    prompt = load_prompt(data)
    user_chat_history = "\n\n".join(dialog.list)
    my_message = await send_text(update, context, "ChatGPT –¥—É–º–∞–µ—Ç –Ω–∞–¥ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–∞...")
    answer = await chatgpt.send_question(prompt, user_chat_history)
    await my_message.edit_text(answer)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ (–¥–ª—è –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤, –∫—Ä–æ–º–µ date_ –∏ message_)
async def hello_button(update, context):
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ (—á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏")

    data = query.data

    if data == "btn_start":
        await send_text(update, context, "–†–µ–∂–∏–º '–°—Ç–∞—Ä—Ç' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    elif data == "btn_stop":
        await send_text(update, context, "–†–µ–∂–∏–º '–°—Ç–æ–ø' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
    elif data == "start":
        await start(update, context)
    elif data == "gpt":
        await gpt(update, context)
    elif data == "date":
        await date(update, context)
    elif data == "message":
        await message(update, context)
    elif data == "profile":
        await send_text(update, context, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")
    elif data == "opener":
        await send_text(update, context, "–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!")

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    app = ApplicationBuilder().token(
        "6597079317:AAFMCwtle2wRhd4BF4GugepZj01VyF8asNA").build()

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ
    app.add_handler(CommandHandler("start", start))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /gpt
    app.add_handler(CommandHandler("gpt", gpt))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /date
    app.add_handler(CommandHandler("date", date))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /message
    app.add_handler(CommandHandler("message", message))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∏—Å–∫–ª—é—á–∞—è –∫–æ–º–∞–Ω–¥—ã) ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç hello
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, hello))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ (–æ—Å–Ω–æ–≤–Ω—ã–µ)
    app.add_handler(CallbackQueryHandler(hello_button))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ date
    app.add_handler(CallbackQueryHandler(date_button, pattern="^date_.*"))

    # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ message
    app.add_handler(CallbackQueryHandler(
        message_button, pattern="^message_.*"))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ —á–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∞ (–ø–æ–ª—É—á–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É).")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")

    app.run_polling(drop_pending_updates=True)
